{"version":3,"file":"static/js/9956.64bbe3b6.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","hooks/useGoBackOnePath.jsx","components/ScrollComponent.jsx","components/ImageSlider.jsx","pages/ProductGallery.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div disabled={disabled} className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useRef, forwardRef, useState } from 'react';\r\n\r\nconst ScrollComponent = forwardRef(({ onScrollRight, onScrollLeft, children, ...props }, scrollContainerRef) => {\r\n  const containerRef = scrollContainerRef;\r\n  const [isTouching, setIsTouching] = useState(false);\r\n  const startX = useRef(0);\r\n  const startScrollLeft = useRef(0);\r\n\r\n  const handleTouchStart = (event) => {\r\n    setIsTouching(true);\r\n    startX.current = event.touches[0].clientX;\r\n    startScrollLeft.current = containerRef.current.scrollLeft;\r\n  };\r\n\r\n  const handleTouchMove = (event) => {\r\n    if (isTouching) {\r\n      const x = event.touches[0].clientX;\r\n      const walk = x - startX.current;\r\n      containerRef.current.scrollLeft = startScrollLeft.current - walk;\r\n    }\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    setIsTouching(false);\r\n    const endX = containerRef.current.scrollLeft;\r\n    const distance = endX - startScrollLeft.current;\r\n\r\n    if (distance > 0) {\r\n      onScrollLeft()\r\n    } else if (distance < 0) {\r\n      onScrollRight()\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      ref={scrollContainerRef}\r\n      {...props}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      onTouchEnd={handleTouchEnd}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ScrollComponent;","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ScrollComponent from './ScrollComponent';\r\n\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n  const galleryContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const galleryContainer = galleryContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n\r\n      // gellery scrolling\r\n      const containerWidth = galleryContainer.offsetWidth;\r\n      // Calculate the scroll position to center the element\r\n      const scrollPosition = containerWidth * currentImage.id\r\n      galleryContainer.scroll({\r\n        left: language==='ar' ? -scrollPosition : scrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleResize=()=>{\r\n      const galleryContainer = galleryContainerRef.current;\r\n      const containerWidth = galleryContainer.offsetWidth;\r\n      // Calculate the scroll position to center the element\r\n      const scrollPosition = containerWidth * currentImage.id\r\n      galleryContainer.scroll({\r\n        left: language==='ar' ? -scrollPosition : scrollPosition,\r\n      });\r\n  }\r\n  useEffect(()=>{\r\n    handleResize()\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup: Remove event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [])\r\n  \r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`image-slider ${fullscreen ? 'fullscreen' : ''}`}\r\n    >\r\n        <div\r\n          className=\"slides\" \r\n        >\r\n              <ScrollComponent\r\n                className={`slide cursor-pointer d-flex flex-nowrap hode-scroll`}\r\n                onClick={()=>!fullscreen && navigate('gallery')}\r\n                ref={galleryContainerRef}\r\n                style={{\r\n                  overflowX: 'auto',\r\n                  scrollBehavior: 'auto',\r\n                  whiteSpace: 'nowrap',\r\n                  touchAction: 'none', // Prevent default touch scrolling\r\n                }}\r\n                onScrollRight={nextSlide}\r\n                onScrollLeft={prevSlide}\r\n              >\r\n                {images.map((image, index)=>(\r\n                  <div\r\n                    key={index}\r\n                    className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0`}\r\n                    style={{ \r\n                      backgroundImage: `url(${image.url})` ,\r\n                      height: '100%',\r\n                      width: '100%',\r\n                      backgroundSize: fullscreen ? undefined : 'contain',\r\n                      backgroundRepeat: 'no-repeat',\r\n                      backgroundPosition: 'center',\r\n                      flexShrink: 0\r\n                    }}\r\n                  />\r\n                ))}\r\n              </ScrollComponent>\r\n            <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n            <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n          <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </div>\r\n        <hr style={{width: '100%', borderTop: 0}} className='border-color-primary-fiding'/>\r\n        <div \r\n          className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n          ref={dotContainerRef}\r\n        >\r\n          {images.map((image) => (\r\n            <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n              <LazyLoadCustiom>\r\n                <span\r\n                  className='dot'\r\n                  onClick={() => handleDotClick(image.id)}\r\n                  style={{\r\n                    backgroundImage: `url(${image.url})`\r\n                  }}\r\n                />\r\n              </LazyLoadCustiom>\r\n            </div>\r\n              \r\n          ))}\r\n        </div>        \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\n\r\nconst ProductPageInner=()=>{\r\n  return(\r\n    <div style={{ top: 64, borderRadius: 'var(--border-radius-3)', overflow: 'hidden'}} className='p-sticky-md border' id='image-slider__container'>\r\n      <ImageSlider fullscreen/>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst ProductPage = () => {\r\n  return (\r\n      <ProductPageInner/>\r\n  )\r\n}\r\n\r\nexport default ProductPage","import React, { useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { apiUrl, filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProvider=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.length > 0 ? shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          }): states.map(state=>({\r\n            cost: 0,\r\n            costToHome: 0,\r\n            label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            id :state.id\r\n          }))\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../../../css/suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n    return (\r\n        <ProductContext.Provider value={defaultValue}>\r\n            { productData.productId && <Outlet/>}\r\n            { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n              <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n              <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n                <i className='fa-solid fa-chevron-left'></i>\r\n                {translaste('Go back to store')}\r\n              </BuyButton>\r\n            </div> }\r\n        </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","forwardRef","scrollContainerRef","onScrollRight","onScrollLeft","containerRef","isTouching","setIsTouching","useState","startX","useRef","startScrollLeft","ref","onTouchStart","event","current","touches","clientX","scrollLeft","onTouchMove","walk","onTouchEnd","handleTouchEnd","distance","memo","fullscreen","currentImage","setCurrentImage","productData","useProductContext","galleryImages","images","map","image","index","url","id","nextSlide","imageIndex","findIndex","obj","newIndex","length","prevSlide","useGoBackOnePAth","useEffect","document","getElementById","classList","remove","documentElement","style","overflow","add","removeProperty","language","useStoreContext","rtl","dotContainerRef","galleryContainerRef","dotContainer","galleryContainer","targetElement","dotContainerWidth","offsetWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","scrollPosition","handleResize","addEventListener","removeEventListener","_jsxs","ScrollComponent","overflowX","scrollBehavior","whiteSpace","touchAction","backgroundImage","height","width","backgroundSize","backgroundRepeat","backgroundPosition","flexShrink","toggleFullScreen","borderTop","borderRadius","LazyLoadCustiom","handleDotClick","find","ProductPageInner","top","ImageSlider","ProductPage","defaultProductData","productId","title","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","variants","pricesAndImagesList","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","ProductContextProvider","error","setError","useParams","lang_prefix","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","console","log","status","statusText","json","cost","state","states","costToHome","label","code","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","defaultValue","func","newState","Provider","value","Outlet","minHeight","translaste","BuyButton","useContext"],"sourceRoot":""}