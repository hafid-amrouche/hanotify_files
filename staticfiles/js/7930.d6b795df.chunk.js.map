{"version":3,"file":"static/js/7930.d6b795df.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","hooks/useGoBackOnePath.jsx","components/ImageSlider.jsx","pages/ProductGallery.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div disabled={disabled} className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Zoom  } from 'swiper/modules';\r\nimport 'swiper/css/zoom';\r\n\r\n\r\nimport \"swiper/css\";\r\n\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {screenWidth} = useStoreContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n    swiperRef.current.swiper.slideTo(id)\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    setCurrentImage(images.find(image=>image.id === swiper.activeIndex)) // swiper.activeIndex gives the current slide index\r\n  };\r\n  const swiperRef = useRef()\r\n\r\n  const aspectRatio = 1\r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`image-slider ${fullscreen ? 'fullscreen' : ''} ${screenWidth >= 768 && 'border' }` }\r\n    >\r\n        <div\r\n          className={`slides `}\r\n          style={{\r\n            position: 'relative'\r\n          }}\r\n        >\r\n            <div style={{position: 'absolute', top:0, left: 0, width: '100%', height: '100%', display: 'flex', justifyContent: 'center'}}>\r\n              <div style={{\r\n                maxWidth:'100%',\r\n                aspectRatio,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n              }}\r\n              >\r\n                <div style={{ width: '100%', aspectRatio: 1}}>\r\n                  <Swiper\r\n                    className=\"mySwiper\"\r\n                    onClick={()=>!fullscreen && navigate('gallery')}\r\n                    onSlideChange={handleSlideChange}\r\n                    ref={swiperRef}\r\n                    initialSlide={currentImage.id}\r\n                    grabCursor={true}\r\n                    style={{ \r\n                      height: '100%',\r\n                      width: '100%',\r\n                      maxWidth: '100%',\r\n                      maxHeight: '100%',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left:0,\r\n                      '--swiper-navigation-color': '#fff',\r\n                      '--swiper-pagination-color': '#fff',\r\n                    }}\r\n                    modules={[Zoom]}\r\n                    zoom={true}\r\n                  >\r\n                    {images.map((image, index)=>(\r\n                      <SwiperSlide\r\n                        key={index}\r\n                        className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0 swiper-zoom-container`}\r\n                        style={{ \r\n                          backgroundImage: `url(${image.url})` ,\r\n                          height: '100%',\r\n                          width: '100%',\r\n                          backgroundSize: fullscreen ? undefined : 'contain',\r\n                          backgroundRepeat: 'no-repeat',\r\n                          backgroundPosition: 'center',\r\n                          flexShrink: 0\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Swiper>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n            <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n          <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </div>\r\n        <div \r\n          className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n          ref={dotContainerRef}\r\n        >\r\n          {images.map((image) => (\r\n            <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n              <LazyLoadCustiom>\r\n                <span\r\n                  className='dot'\r\n                  onClick={() => handleDotClick(image.id)}\r\n                  style={{\r\n                    backgroundImage: `url(${image.url})`\r\n                  }}\r\n                />\r\n              </LazyLoadCustiom>\r\n            </div>\r\n              \r\n          ))}\r\n        </div>    \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\n\r\nconst ProductPageInner=()=>{\r\n  return(\r\n    <div style={{ top: 64, borderRadius: 'var(--border-radius-3)', overflow: 'hidden'}} className='p-sticky-md border' id='image-slider__container'>\r\n      <ImageSlider fullscreen/>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst ProductPage = () => {\r\n  return (\r\n      <ProductPageInner/>\r\n  )\r\n}\r\n\r\nexport default ProductPage","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { apiUrl, filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProviderInner=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.length > 0 ? shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          }): states.map(state=>({\r\n            cost: 0,\r\n            costToHome: 0,\r\n            label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            id :state.id\r\n          }))\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../../../css/suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n    return (\r\n      <ProductContext.Provider value={defaultValue}>\r\n          { productData.productId && <Outlet/>}\r\n          { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n            <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n            <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n              <i className='fa-solid fa-chevron-left'></i>\r\n              {translaste('Go back to store')}\r\n            </BuyButton>\r\n          </div> }\r\n      </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nconst ProductContextProvider=()=>{\r\n  const {id: productId} = useParams()\r\n  return <ProductContextProviderInner key={productId} />\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","ImageSlider","memo","fullscreen","currentImage","setCurrentImage","productData","useProductContext","screenWidth","useStoreContext","galleryImages","images","map","image","index","url","id","useGoBackOnePAth","useEffect","document","getElementById","classList","remove","documentElement","style","overflow","add","removeProperty","language","rtl","dotContainerRef","useRef","dotContainer","current","targetElement","dotContainerWidth","offsetWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","swiperRef","_jsxs","position","top","width","height","display","justifyContent","maxWidth","aspectRatio","alignItems","Swiper","onSlideChange","swiper","find","activeIndex","ref","initialSlide","grabCursor","maxHeight","modules","Zoom","zoom","SwiperSlide","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","flexShrink","prevSlide","imageIndex","findIndex","obj","newIndex","slideTo","nextSlide","length","toggleFullScreen","borderRadius","LazyLoadCustiom","handleDotClick","ProductPageInner","ProductPage","defaultProductData","productId","title","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","variants","pricesAndImagesList","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","ProductContextProviderInner","useState","error","setError","useParams","lang_prefix","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","console","log","status","statusText","json","cost","state","states","costToHome","label","code","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","defaultValue","func","newState","Provider","value","Outlet","minHeight","translaste","BuyButton","ProductContextProvider","useContext"],"sourceRoot":""}