{"version":3,"file":"static/js/1513.cfe4b133.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","pages/ThankYouPage.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { json, useLocation, useParams } from \"react-router-dom\"\r\nimport { useStoreContext } from \"../store/store-context\"\r\nimport { Fragment, useEffect } from \"react\"\r\nimport { translaste } from \"../utils/utils\"\r\nimport {useProductContext} from './product-page/store/product-context'\r\nimport BuyButton from \"../components/BuyButton\"\r\n\r\nexport function getCombinations(variants) {\r\n    const variantOptions = variants.map(variant => Object.values(variant.options));\r\n    if (variantOptions.length === 0) {\r\n      return [];\r\n    }\r\n    function combine(optionsArray) {\r\n      if (optionsArray.length === 0) {\r\n        return [[]];\r\n      }\r\n  \r\n      const result = [];\r\n      const firstOptionSet = optionsArray[0];\r\n      const remainingOptionSets = optionsArray.slice(1);\r\n  \r\n      const remainingCombinations = combine(remainingOptionSets);\r\n  \r\n      for (const option of firstOptionSet) {\r\n        for (const combination of remainingCombinations) {\r\n          result.push([option.label, ...combination]);\r\n        }\r\n      }\r\n      \r\n      console.log(result)\r\n      return result;\r\n    }\r\n  \r\n    const combinations = combine(variantOptions);\r\n  \r\n    return combinations.map(combination => {\r\n      const combinedObject = {};\r\n  \r\n      combination.forEach((option, index) => {\r\n        const variantName = variants[index].name;\r\n        combinedObject[variantName] = option;\r\n      });\r\n  \r\n      return combinedObject;\r\n    });\r\n  }\r\n\r\nconst ThankYouPage=()=>{\r\n    const {storeData} = useStoreContext()\r\n    const {id} = useParams()\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n\r\n    const order = JSON.parse(searchParams.get('order'));\r\n\r\n    const productPrice = order.productPrice || 0;\r\n    const quantity = order.quantity;\r\n    const shippingCost = order.shippingCost || 0;\r\n    const totalPrice = order.totalPrice || 0;\r\n    const index = order.index || 0;\r\n    \r\n    const {productData} = useProductContext()\r\n    \r\n    let variantsCombinations = []\r\n    if (productData.pricesAndImagesList?.length > 0 ){\r\n        const variantsList = Object.values(productData.variants).filter(variant=>Object.keys(variant.options).length > 0)\r\n        const newCombinition = getCombinations(variantsList)\r\n        variantsCombinations = newCombinition\r\n    }\r\n    const combination = variantsCombinations[index]\r\n    const image = productData.galleryImages && ( productData.pricesAndImagesList[index].image || productData.galleryImages[0] || '');\r\n    const title = productData.title || '';\r\n\r\n    useEffect(()=>{\r\n        if (storeData.facebookPixelId) {\r\n            window.fbq('track', 'Purchase', {\r\n                content_ids: [id], // Unique identifier for the order\r\n                content_type: 'product',\r\n                value: totalPrice, // Total value of the purchase\r\n                currency: 'DZD' // Currency of the purchase\r\n            });\r\n        }\r\n    }, [])\r\n    return(\r\n        <div \r\n            \r\n            style={{\r\n                width: 'min(95vw , 600px)',\r\n                padding: 8,\r\n                backgroundColor: 'var(--background-color)',\r\n                borderRadius: 'var(--border-radius-2)',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 16,\r\n                margin: '20px auto'\r\n            }}\r\n            className=\"border\"\r\n        >\r\n            <h3 className='color-primary text-center'>{ translaste('Your order have been recieved') }</h3>\r\n            <div className=\"d-flex flex-column gap-3\">\r\n                <div className=\"d-flex flex-nowrap gap-2 border p-2\">\r\n                    <img src={image} width={80} height={80} style={{objectFit: 'cover'}}/>\r\n                    <div className=\"d-flex flex-column gap-2\">\r\n                        <h3 className=\"color-primary\" style={{lineHeight: 1.2}}>{ title }</h3>\r\n                        <div>\r\n                            { combination && Object.entries(combination).map(([key, value])=>(\r\n                                <div className=\"d-flex gap-2 py-0\" key={key}>\r\n                                    <h4>{ key }</h4>\r\n                                    <h4 className=\"color-primary\">{ value }</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <h4>{ translaste('Product price') }: <span className=\"color-primary\">{productPrice} {translaste('DA')}</span></h4>\r\n                    </div>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <h4>{ translaste('Quantity') }: <span className=\"color-primary\">{quantity}</span></h4>\r\n                    </div>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <h4>{ translaste('Shipping cost') }: <span className=\"color-primary\">{shippingCost} {translaste('DA')}</span></h4>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <h4>{ translaste('Total price') }:</h4>\r\n                        <h3 className=\"color-primary\">{totalPrice} {translaste('DA')}</h3>\r\n                    </div> \r\n                </div>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThankYouPage","import React, { useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { apiUrl, filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProvider=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.length > 0 ? shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          }): states.map(state=>({\r\n            cost: 0,\r\n            costToHome: 0,\r\n            label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            id :state.id\r\n          }))\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n      fetch(\r\n        apiUrl + '/product/increment-product-views',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ \r\n            product_id: productId  \r\n          })\r\n        }\r\n      )\r\n    }, [])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n\r\n\r\n    return (\r\n        <ProductContext.Provider value={defaultValue}>\r\n            { productData.productId && <Outlet/>}\r\n            { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n              <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n              <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n                <i className='fa-solid fa-chevron-left'></i>\r\n                {translaste('Go back to store')}\r\n              </BuyButton>\r\n            </div> }\r\n        </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","getCombinations","variants","variantOptions","map","variant","Object","values","options","length","combinations","combine","optionsArray","result","firstOptionSet","remainingCombinations","slice","option","combination","push","label","console","log","combinedObject","forEach","index","variantName","name","ThankYouPage","_productData$pricesAn","storeData","useStoreContext","id","useParams","location","useLocation","searchParams","URLSearchParams","search","order","JSON","parse","get","productPrice","quantity","shippingCost","totalPrice","productData","useProductContext","variantsCombinations","pricesAndImagesList","filter","keys","image","galleryImages","title","useEffect","facebookPixelId","window","fbq","content_ids","content_type","value","currency","_jsxs","style","width","padding","backgroundColor","borderRadius","display","flexDirection","gap","margin","translaste","src","height","objectFit","lineHeight","entries","key","defaultProductData","productId","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","currentImage","setCurrentImage","ProductContextProvider","useState","error","setError","language","lang_prefix","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","status","statusText","json","cost","state","states","find","costToHome","code","url","document","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","apiUrl","headers","body","stringify","product_id","navigate","useNavigate","defaultValue","func","newState","Provider","Outlet","minHeight","BuyButton","useContext"],"sourceRoot":""}