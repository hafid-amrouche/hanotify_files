{"version":3,"file":"static/js/7930.0eacbc88.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","hooks/useGoBackOnePath.jsx","components/AspectRatioComponent.jsx","components/ImageSlider.jsx","pages/ProductGallery.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div disabled={disabled} className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useState, useEffect, useRef } from 'react';\r\nimport './AspectRatioComponent.css';  // Optional: for additional styling\r\n\r\n// AspectRatioComponent takes 'aspectRatio' prop and adjusts size accordingly\r\nconst AspectRatioComponent = ({ aspectRatio, children, disable }) => {\r\n  // State for component width and height\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  // A ref to get access to the container DOM element\r\n  const containerRef = useRef(null);\r\n\r\n  // Function to calculate dimensions based on aspect ratio and container size\r\n  const calculateDimensions = () => {\r\n    // Get container's current width and height\r\n    const container = containerRef.current;\r\n    const containerWidth = container.offsetWidth;\r\n    const containerHeight = container.offsetHeight;\r\n\r\n    // Calculate the best fit dimensions based on the aspect ratio\r\n    const containerAspectRatio = containerWidth / containerHeight;\r\n\r\n    if (containerAspectRatio > aspectRatio) {\r\n      // Container is wider than the desired aspect ratio, fit height\r\n      setDimensions({\r\n        width: containerHeight * aspectRatio,  // Adjust width based on height\r\n        height: containerHeight,  // Use full container height\r\n      });\r\n    } else {\r\n      // Container is taller than the desired aspect ratio, fit width\r\n      setDimensions({\r\n        width: containerWidth,  // Use full container width\r\n        height: containerWidth / aspectRatio,  // Adjust height based on width\r\n      });\r\n    }\r\n  };\r\n\r\n  // Effect hook to recalculate dimensions when the window resizes\r\n  useEffect(() => {\r\n    calculateDimensions()\r\n    setTimeout(calculateDimensions, [200])\r\n    window.addEventListener('resize', calculateDimensions);\r\n\r\n    // Clean up the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', calculateDimensions); \r\n    };\r\n  }, []);\r\n  return (\r\n    <div ref={containerRef} className=\"aspect-ratio-component-container d-flex\">  \r\n      { !disable && <div\r\n        className=\"aspect-ratio-component-box\"\r\n        style={{\r\n          width: `${dimensions.width}px`,\r\n          height: `${dimensions.height}px`,\r\n        }}\r\n      >\r\n        {/* Render children content */} \r\n        {children}\r\n      </div>\r\n      }\r\n      {\r\n        disable && children\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AspectRatioComponent;\r\n","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Zoom, Navigation } from 'swiper/modules';\r\nimport 'swiper/css/zoom';\r\n\r\n\r\nimport \"swiper/css\";\r\nimport AspectRatioComponent from './AspectRatioComponent';\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {screenWidth} = useStoreContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n    swiperRef.current.swiper.slideTo(id)\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    setCurrentImage(images.find(image=>image.id === swiper.activeIndex)) // swiper.activeIndex gives the current slide index\r\n  };\r\n  const swiperRef = useRef()\r\n  const aspectRatio = 1\r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`justify-content-center image-slider ${fullscreen ? 'fullscreen' : ''}` }\r\n    >\r\n        <div\r\n          className={`slides`}\r\n          style={{\r\n            position: 'relative',\r\n            flex: 1\r\n          }}\r\n        >\r\n            <div style={{position: 'absolute', top:0, left: 0, width: '100%', height: '100%', display: 'flex', alignItems: 'center'}}>\r\n              <AspectRatioComponent aspectRatio={1} disable={fullscreen} >\r\n                <Swiper\r\n                  className=\"mySwiper\"\r\n                  onClick={()=>!fullscreen && navigate('gallery')}\r\n                  onSlideChange={handleSlideChange}\r\n                  ref={swiperRef}\r\n                  initialSlide={currentImage.id}\r\n                  modules={[Zoom, Navigation]}\r\n                  style={{ \r\n                    height: '100%',\r\n                    width: '100%',\r\n                    maxWidth: '100%',\r\n                    maxHeight: '100%',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left:0,\r\n                    '--swiper-navigation-color': '#fff',\r\n                    '--swiper-pagination-color': '#fff',\r\n                  }}\r\n                  zoom={true}\r\n                  grabCursor\r\n                >\r\n                  {images.map((image, index)=>(\r\n                    <SwiperSlide \r\n                      key={index}\r\n                      className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0`}\r\n                      >\r\n                      <div className=\"swiper-zoom-container\">\r\n                        <img\r\n                          className={` ${screenWidth >= 768 && 'border' }`}\r\n                          style={{ \r\n                            display: 'block',\r\n                            height: '100%',\r\n                            width: '100%',\r\n                            objectFit: fullscreen ? 'contain' : 'cover',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            backgroundPosition: 'center',\r\n                            flexShrink: 0,\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0\r\n                          }}\r\n                          src={image.url}\r\n                        />\r\n                      </div>\r\n                    </SwiperSlide>\r\n                  ))}\r\n                \r\n                </Swiper>\r\n                <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n                <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n                <div \r\n                  className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n                  ref={dotContainerRef}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    bottom: -52,\r\n                  }}\r\n                >\r\n                  {images.map((image) => (\r\n                    <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n                      <LazyLoadCustiom>\r\n                        <span\r\n                          className='dot'\r\n                          onClick={() => handleDotClick(image.id)}\r\n                          style={{\r\n                            backgroundImage: `url(${image.url})`\r\n                            \r\n                          }}\r\n                        />\r\n                      </LazyLoadCustiom>\r\n                    </div>\r\n                  ))}\r\n                </div>    \r\n              </AspectRatioComponent>\r\n            </div>\r\n            <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </div>\r\n        <div style={{width: '100%', height: 52}}/>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\n\r\nconst ProductPageInner=()=>{\r\n  return(\r\n    <div style={{ top: 64, borderRadius: 'var(--border-radius-3)', overflow: 'hidden'}} className='p-sticky-md border' id='image-slider__container'>\r\n      <ImageSlider fullscreen/>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst ProductPage = () => {\r\n  return (\r\n      <ProductPageInner/>\r\n  )\r\n}\r\n\r\nexport default ProductPage","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { apiUrl, filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProviderInner=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.length > 0 ? shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          }): states.map(state=>({\r\n            cost: 0,\r\n            costToHome: 0,\r\n            label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            id :state.id\r\n          }))\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n      return ()=>{window.productData = undefined}\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../../../css/suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n    return (\r\n      <ProductContext.Provider value={defaultValue}>\r\n          { productData.productId && <Outlet/>}\r\n          { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n            <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n            <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n              <i className='fa-solid fa-chevron-left'></i>\r\n              {translaste('Go back to store')}\r\n            </BuyButton>\r\n          </div> }\r\n      </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nconst ProductContextProvider=()=>{\r\n  const {id: productId} = useParams()\r\n  return <ProductContextProviderInner key={productId} />\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","aspectRatio","disable","dimensions","setDimensions","useState","width","height","containerRef","useRef","calculateDimensions","container","current","containerWidth","offsetWidth","containerHeight","offsetHeight","useEffect","setTimeout","addEventListener","removeEventListener","_jsxs","ref","style","ImageSlider","memo","fullscreen","currentImage","setCurrentImage","productData","useProductContext","screenWidth","useStoreContext","galleryImages","images","map","image","index","url","id","useGoBackOnePAth","document","getElementById","classList","remove","documentElement","overflow","add","removeProperty","language","rtl","dotContainerRef","dotContainer","targetElement","dotContainerWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","swiperRef","position","flex","top","display","alignItems","AspectRatioComponent","Swiper","onSlideChange","swiper","find","activeIndex","initialSlide","modules","Zoom","Navigation","maxWidth","maxHeight","zoom","grabCursor","SwiperSlide","objectFit","backgroundRepeat","backgroundPosition","flexShrink","src","prevSlide","imageIndex","findIndex","obj","newIndex","slideTo","nextSlide","length","bottom","borderRadius","LazyLoadCustiom","handleDotClick","backgroundImage","toggleFullScreen","ProductPageInner","ProductPage","defaultProductData","productId","title","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","variants","pricesAndImagesList","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","ProductContextProviderInner","error","setError","useParams","lang_prefix","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","console","log","status","statusText","json","cost","state","states","costToHome","label","code","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","defaultValue","func","newState","Provider","value","Outlet","minHeight","translaste","BuyButton","ProductContextProvider","useContext"],"sourceRoot":""}