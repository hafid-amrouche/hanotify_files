{"version":3,"file":"static/js/2488.2811b5e3.chunk.js","mappings":"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","sources":["components/swipers/gallery-swiper/components/ProductCard.jsx","components/swipers/gallery-swiper/swipers/DefaultSwiper.jsx"],"sourcesContent":["import React from 'react'\r\nimport { translaste } from '../../../../utils/utils'\r\nimport { useStoreContext } from '../../../../store/store-context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProductCard=({product, sectionDesign})=>{\r\n    const {theme, device} = useStoreContext()\r\n    const isMobile = device === 'mobile'\r\n    const productsDesign =  sectionDesign.products\r\n    \r\n    const {\r\n        bordersRounded,\r\n        borderColor: borderColorObject,\r\n        backgroundColor: backgroundColorObject,\r\n        borderWidth,\r\n        product: {\r\n            image: {\r\n                aspectRatio,\r\n                objectFit\r\n            },\r\n            title: {\r\n                size : productTitleSize,\r\n                color: titleColorObject\r\n            },\r\n            price: {\r\n                size : productPriceSize,\r\n                color: priceColorObject\r\n            }\r\n        }\r\n    } = productsDesign\r\n\r\n    const backgroundColor = backgroundColorObject[theme]\r\n    const borderColor = borderColorObject[theme]\r\n    const titleColor = titleColorObject[theme]\r\n    const priceColor = priceColorObject[theme]\r\n    const borderRadius = isMobile ? 4 : 8\r\n\r\n    return(\r\n        <Link to={`/products/${product.slug}/${product.product_id}`} \r\n        // className='scale-on-hover' \r\n        >\r\n            <div  \r\n                style={{ \r\n                    overflow: 'hidden', \r\n                    borderRadius: bordersRounded ? borderRadius : undefined, \r\n                    border: `${borderWidth}px solid ${borderColor}`,\r\n                }}>\r\n                    <div\r\n                        style={{\r\n                            backgroundColor: backgroundColor,\r\n                        }}\r\n                    >\r\n                        <div \r\n                            style={{\r\n                                width: '100%', \r\n                                aspectRatio: aspectRatio, \r\n                                display: 'flex', \r\n                                alignItems: 'center', \r\n                                justifyContent:'center',\r\n                                backgroundImage: `url(${product.image})`,\r\n                                backgroundSize: objectFit,\r\n                                backgroundPosition: 'center',\r\n                                backgroundRepeat: 'no-repeat',\r\n                            }} \r\n                        />\r\n                        <div className='px-2'>\r\n                            <h4 className='cut-text' style={{fontSize: productTitleSize, color: titleColor}}>{ product.title }</h4>\r\n                            {  product.price ? \r\n                                <div className='d-flex justify-content-between'>\r\n                                    <h4 style={{color: priceColor, fontSize: productPriceSize}}>{ product.price } {translaste('DA')} </h4>\r\n                                    { product.original_price && <h4 style={{fontSize: productPriceSize, color: 'var(---greyColor)', textDecoration: 'line-through', fontSize: productPriceSize}}>{ product.original_price } {translaste('DA')} </h4>}\r\n                                </div>:\r\n                                <h4 style={{color: 'red', fontSize: productPriceSize}} >{ product.price } {translaste('No price')} </h4> \r\n                            }\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </Link>\r\n            \r\n)}\r\n\r\n\r\nexport default ProductCard","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport { Navigation } from 'swiper/modules';\r\n\r\n// Import conditionally\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport ProductCard from '../components/ProductCard';\r\nimport { useStoreContext } from '../../../../store/store-context';\r\nimport SwiperImageCard from '../components/SwiperImageCard'\r\n\r\n\r\nconst DefaultSwiper=({section})=>{\r\n    const {device} = useStoreContext()\r\n\r\n    const isSectionProductsContainer = section.type === 'products-container' || section.type=== 'category'\r\n    const isSectionSwiper = section.type === 'swiper'\r\n\r\n    const sectionDesign = \r\n    isSectionProductsContainer ? section.design[device] :\r\n    isSectionSwiper ? section.design:\r\n    {}\r\n\r\n    const [justifyContent, gap, cssWidth] = isSectionProductsContainer ? [\r\n        sectionDesign.products.justifyContent,\r\n        sectionDesign.products.gap,\r\n        sectionDesign.products.product.width,\r\n    ] : [\r\n        sectionDesign.justifyContent,\r\n        sectionDesign.gap,\r\n        sectionDesign.image.width,\r\n    ]\r\n\r\n    const [slidesPerView, setSliderPerView] = useState(1)\r\n    const [swiperWidth, setSwiperWidth] = useState(0)\r\n\r\n    const swiperRef= useRef()\r\n    const checkSwiperWidth = ()=>{\r\n        const newSwiperWidth = (swiperRef.current?.getBoundingClientRect().width )|| 0\r\n        setSwiperWidth(newSwiperWidth)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let slidesPerView;\r\n        if (cssWidth[cssWidth.length - 1] === '%'){\r\n            const per = Number(cssWidth.slice(0, cssWidth.length -1))\r\n            slidesPerView = 100/ per\r\n        }\r\n        else {\r\n            const width = Number(cssWidth.slice(0, cssWidth.length - 2))\r\n            slidesPerView = swiperWidth/ width\r\n        }\r\n        setSliderPerView(slidesPerView)\r\n    }, [swiperWidth, cssWidth])\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('resize', checkSwiperWidth);\r\n        checkSwiperWidth()\r\n        return () => {\r\n            window.removeEventListener('resize', checkSwiperWidth);\r\n        };\r\n    }, [])\r\n\r\n    const props={\r\n        spaceBetween: gap,\r\n        pagination: {\r\n            clickable: true,\r\n        },\r\n        grabCursor: true,\r\n        className: \"mySwiper\",\r\n        style: {\r\n            width:'100%',\r\n            overflow: 'unset'\r\n        },\r\n        centerInsufficientSlides:  justifyContent === 'center' || justifyContent === 'space-evenly',\r\n        slidesPerView: slidesPerView,            \r\n        modules: [Navigation],    \r\n        navigation: true\r\n    }\r\n        \r\n    return(\r\n        <div \r\n            style={{overflowX: 'clip'}}\r\n            ref={swiperRef}\r\n        >\r\n            <Swiper\r\n                {\r\n                    ...props\r\n                }\r\n            >\r\n                { isSectionProductsContainer && section.products?.map(product=>\r\n                    <SwiperSlide \r\n                        key={product.product_id}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        <ProductCard sectionDesign={sectionDesign} product={product} />\r\n                    </SwiperSlide>\r\n                )}\r\n                { isSectionSwiper && section.imageObjects?.map(imageObject=>\r\n                    <SwiperSlide \r\n                        key={imageObject.url}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        <SwiperImageCard sectionDesign={sectionDesign} imageObject={imageObject} />\r\n                    </SwiperSlide>\r\n                )}\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultSwiper"],"names":["_ref","product","sectionDesign","theme","device","useStoreContext","isMobile","productsDesign","products","bordersRounded","borderColor","borderColorObject","backgroundColor","backgroundColorObject","borderWidth","image","aspectRatio","objectFit","title","size","productTitleSize","color","titleColorObject","price","productPriceSize","priceColorObject","titleColor","priceColor","borderRadius","_jsx","Link","to","concat","slug","product_id","children","style","overflow","undefined","border","_jsxs","width","display","alignItems","justifyContent","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","className","fontSize","translaste","original_price","textDecoration","_section$products","_section$imageObjects","section","isSectionProductsContainer","type","isSectionSwiper","design","gap","cssWidth","slidesPerView","setSliderPerView","useState","swiperWidth","setSwiperWidth","swiperRef","useRef","checkSwiperWidth","_swiperRef$current","newSwiperWidth","current","getBoundingClientRect","useEffect","length","Number","slice","window","addEventListener","removeEventListener","props","spaceBetween","pagination","clickable","grabCursor","centerInsufficientSlides","modules","Navigation","navigation","overflowX","ref","Swiper","map","SwiperSlide","ProductCard","imageObjects","imageObject","SwiperImageCard","url"],"sourceRoot":""}