{"version":3,"file":"static/js/9956.18626b4f.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","hooks/useGoBackOnePath.jsx","components/SwipeDetector.jsx","components/ImageSlider.jsx","components/LazyLoadCustiom.jsx","pages/ProductGallery.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div disabled={disabled} className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import { useState } from \"react\";\r\n\r\nconst SwipeDetector = ({ onSwipeLeft, onSwipeRight, children, ...props }) => {\r\n    const [touchStart, setTouchStart] = useState(null);\r\n    const [touchEnd, setTouchEnd] = useState(null);\r\n  \r\n    // Minimum swipe distance (in pixels) to detect a swipe\r\n    const minSwipeDistance = 50;\r\n  \r\n    const handleTouchStart = (e) => {\r\n      // Record the initial touch position\r\n      setTouchStart(e.targetTouches[0].clientX);\r\n      setTouchEnd(null); // Reset touchEnd on a new touch\r\n    };\r\n  \r\n    const handleTouchMove = (e) => {\r\n      // Update the current touch position as the user moves their finger\r\n      setTouchEnd(e.targetTouches[0].clientX);\r\n    };\r\n  \r\n    const handleTouchEnd = () => {\r\n      if (!touchStart || !touchEnd) return; // Prevent swipe detection if the touch data is incomplete\r\n  \r\n      const distance = touchStart - touchEnd; // Calculate the distance swiped\r\n      const isSwipe = Math.abs(distance) > minSwipeDistance;\r\n  \r\n      if (isSwipe) {\r\n        // Call the corresponding handler depending on the direction of the swipe\r\n        if (distance > 0) {\r\n          onSwipeLeft(); // Swiped left\r\n        } else {\r\n          onSwipeRight(); // Swiped right\r\n        }\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n        {...props}\r\n      >\r\n       {children}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default SwipeDetector;","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SwipeDetector from './SwipeDetector';\r\n\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n  const galleryContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const galleryContainer = galleryContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n\r\n      // gellery scrolling\r\n      const containerWidth = galleryContainer.offsetWidth;\r\n      // Calculate the scroll position to center the element\r\n      const scrollPosition = containerWidth * currentImage.id\r\n      galleryContainer.scroll({\r\n        left: -scrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleResize=()=>{\r\n      const galleryContainer = galleryContainerRef.current;\r\n      const containerWidth = galleryContainer.offsetWidth;\r\n      // Calculate the scroll position to center the element\r\n      const scrollPosition = containerWidth * currentImage.id\r\n      galleryContainer.scroll({\r\n        left: -scrollPosition,\r\n      });\r\n  }\r\n  useEffect(()=>{\r\n    handleResize()\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup: Remove event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [])\r\n\r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`image-slider ${fullscreen ? 'fullscreen' : ''}`}\r\n    >\r\n        <SwipeDetector \r\n          className=\"slides\" \r\n          onSwipeLeft={prevSlide}\r\n          onSwipeRight={nextSlide}\r\n        >\r\n              <div\r\n                className={`slide cursor-pointer d-flex flex-nowrap`}\r\n                onClick={()=>!fullscreen && navigate('gallery')}\r\n                ref={galleryContainerRef}\r\n                style={{\r\n                  overflow: 'hidden'\r\n                }}\r\n\r\n              >\r\n                {images.map((image, index)=>(\r\n                  <div\r\n                    key={index}\r\n                    className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0`}\r\n                    style={{ \r\n                      backgroundImage: `url(${image.url})` ,\r\n                      height: '100%',\r\n                      width: '100%',\r\n                      backgroundSize: fullscreen ? undefined : 'contain',\r\n                      backgroundRepeat: 'no-repeat',\r\n                      backgroundPosition: 'center',\r\n                      flexShrink: 0\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n            <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n          <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </SwipeDetector>\r\n        <div \r\n          className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n          ref={dotContainerRef}\r\n        >\r\n          {images.map((image) => (\r\n            <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n              <LazyLoadCustiom>\r\n                <span\r\n                  className='dot'\r\n                  onClick={() => handleDotClick(image.id)}\r\n                  style={{\r\n                    backgroundImage: `url(${image.url})`\r\n                  }}\r\n                />\r\n              </LazyLoadCustiom>\r\n            </div>\r\n              \r\n          ))}\r\n        </div>        \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst LazyLoadCustiom = ({ children, ...props }) => {\r\n  const [isInView, setIsInView] = useState(false);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (containerRef.current) {\r\n        const rect = containerRef.current.getBoundingClientRect();\r\n        if (rect.bottom < window.innerHeight + 20) {\r\n          setIsInView(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    window.addEventListener('resize', handleScroll);\r\n    // Initial check\r\n    handleScroll();\r\n\r\n    if( isInView){\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('resize', handleScroll);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('resize', handleScroll);\r\n    };\r\n  }, [isInView]);\r\n\r\n  return (\r\n    <div ref={containerRef} {...props}>\r\n      {isInView ? children : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LazyLoadCustiom;\r\n","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\n\r\nconst ProductPageInner=()=>{\r\n  return(\r\n    <div style={{ top: 64, borderRadius: 'var(--border-radius-3)', overflow: 'hidden'}} className='p-sticky-md border' id='image-slider__container'>\r\n      <ImageSlider fullscreen/>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst ProductPage = () => {\r\n  return (\r\n      <ProductPageInner/>\r\n  )\r\n}\r\n\r\nexport default ProductPage","import React, { useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { apiUrl, filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProvider=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.length > 0 ? shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          }): states.map(state=>({\r\n            cost: 0,\r\n            costToHome: 0,\r\n            label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            id :state.id\r\n          }))\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n      fetch(\r\n        apiUrl + '/product/increment-product-views',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ \r\n            product_id: productId  \r\n          })\r\n        }\r\n      )\r\n    }, [])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n    return (\r\n        <ProductContext.Provider value={defaultValue}>\r\n            { productData.productId && <Outlet/>}\r\n            { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n              <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n              <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n                <i className='fa-solid fa-chevron-left'></i>\r\n                {translaste('Go back to store')}\r\n              </BuyButton>\r\n            </div> }\r\n        </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","onSwipeLeft","onSwipeRight","touchStart","setTouchStart","useState","touchEnd","setTouchEnd","onTouchStart","e","targetTouches","clientX","onTouchMove","onTouchEnd","handleTouchEnd","distance","Math","abs","memo","fullscreen","currentImage","setCurrentImage","productData","useProductContext","galleryImages","images","map","image","index","url","id","nextSlide","imageIndex","findIndex","obj","newIndex","length","prevSlide","useGoBackOnePAth","useEffect","document","getElementById","classList","remove","documentElement","style","overflow","add","removeProperty","language","useStoreContext","rtl","dotContainerRef","useRef","galleryContainerRef","dotContainer","current","galleryContainer","targetElement","dotContainerWidth","offsetWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","scrollPosition","handleResize","addEventListener","removeEventListener","_jsxs","SwipeDetector","ref","backgroundImage","height","width","backgroundSize","backgroundRepeat","backgroundPosition","flexShrink","toggleFullScreen","borderRadius","LazyLoadCustiom","handleDotClick","find","isInView","setIsInView","containerRef","handleScroll","getBoundingClientRect","bottom","innerHeight","ProductPageInner","top","ImageSlider","ProductPage","defaultProductData","productId","title","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","variants","pricesAndImagesList","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","ProductContextProvider","error","setError","useParams","lang_prefix","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","console","log","status","statusText","json","cost","state","states","costToHome","label","code","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","apiUrl","headers","body","JSON","stringify","product_id","defaultValue","func","newState","Provider","value","Outlet","minHeight","translaste","BuyButton","useContext"],"sourceRoot":""}