{"version":3,"file":"static/js/2828.c6cfe9af.chunk.js","mappings":"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","sources":["hooks/useGoBackOnePath.jsx","components/ImageSlider.jsx","pages/product-page/ProductIntro.jsx","pages/ProductPage.jsx","components/ProductCard.jsx","pages/product-page/RalatedProductsSection.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Zoom  } from 'swiper/modules';\r\nimport 'swiper/css/zoom';\r\n\r\n\r\nimport \"swiper/css\";\r\n\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {screenWidth} = useStoreContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n    swiperRef.current.swiper.slideTo(id)\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    setCurrentImage(images.find(image=>image.id === swiper.activeIndex)) // swiper.activeIndex gives the current slide index\r\n  };\r\n  const swiperRef = useRef()\r\n\r\n  const aspectRatio = 1\r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`image-slider ${fullscreen ? 'fullscreen' : ''} ${screenWidth >= 768 && 'border' }` }\r\n    >\r\n        <div\r\n          className={`slides `}\r\n          style={{\r\n            position: 'relative'\r\n          }}\r\n        >\r\n            <div style={{position: 'absolute', top:0, left: 0, width: '100%', height: '100%', display: 'flex', justifyContent: 'center'}}>\r\n              <div style={{\r\n                maxWidth:'100%',\r\n                aspectRatio,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n              }}\r\n              >\r\n                <div style={{ width: '100%', aspectRatio: 1}}>\r\n                  <Swiper\r\n                    className=\"mySwiper\"\r\n                    onClick={()=>!fullscreen && navigate('gallery')}\r\n                    onSlideChange={handleSlideChange}\r\n                    ref={swiperRef}\r\n                    initialSlide={currentImage.id}\r\n                    grabCursor={true}\r\n                    style={{ \r\n                      height: '100%',\r\n                      width: '100%',\r\n                      maxWidth: '100%',\r\n                      maxHeight: '100%',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left:0,\r\n                      '--swiper-navigation-color': '#fff',\r\n                      '--swiper-pagination-color': '#fff',\r\n                    }}\r\n                    modules={[Zoom]}\r\n                    zoom={true}\r\n                  >\r\n                    {images.map((image, index)=>(\r\n                      <SwiperSlide\r\n                        key={index}\r\n                        className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0 swiper-zoom-container`}\r\n                        style={{ \r\n                          backgroundImage: `url(${image.url})` ,\r\n                          height: '100%',\r\n                          width: '100%',\r\n                          backgroundSize: fullscreen ? undefined : 'contain',\r\n                          backgroundRepeat: 'no-repeat',\r\n                          backgroundPosition: 'center',\r\n                          flexShrink: 0\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Swiper>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n            <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n          <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </div>\r\n        <div \r\n          className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n          ref={dotContainerRef}\r\n        >\r\n          {images.map((image) => (\r\n            <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n              <LazyLoadCustiom>\r\n                <span\r\n                  className='dot'\r\n                  onClick={() => handleDotClick(image.id)}\r\n                  style={{\r\n                    backgroundImage: `url(${image.url})`\r\n                  }}\r\n                />\r\n              </LazyLoadCustiom>\r\n            </div>\r\n              \r\n          ))}\r\n        </div>    \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { memo } from 'react'\r\nimport { useProductContext } from './store/product-context'\r\nimport { translaste } from '../../utils/utils'\r\n\r\nconst ProductIntro = memo(() => {\r\n  const {productData} =useProductContext()\r\n  return (\r\n    <div>\r\n        <h2 style={{lineHeight:1.4}}>\r\n          {productData.title}\r\n\r\n          { productData.discount &&\r\n            <span style={{\r\n              backgroundColor: 'var(--primaryColor)',\r\n              color: 'var(--backgroundColor)',\r\n              padding: '0 6px',\r\n              margin:'0 8px',\r\n              fontSize:14,\r\n              whiteSpace:'nowrap',\r\n              borderRadius: 'var(--border-radius-2)'\r\n            }}>{ productData.discount }</span>\r\n          }\r\n        </h2>   \r\n        { productData.miniDescription &&  <p style={{lineHeight:1.4, marginTop:8}}>\r\n          {productData.miniDescription}\r\n        </p>}     \r\n        <div className='d-flex align-items-center gap-3'>\r\n          { !productData.price ? '' : <h2 className='number' style={{color: 'var(--primaryColor)'}}>{productData.price} {translaste('DA')}</h2>}\r\n          { !productData.originalPrice  ? '' : <h3 className='old-price'>{productData.originalPrice} { translaste('DA') }</h3>}\r\n          { !productData.price && !productData.originalPrice  && <h3 style={{color: 'red'}}>{ translaste('No price available !') }</h3> }\r\n        </div>       \r\n    </div>\r\n  )\r\n}\r\n)\r\nexport default ProductIntro","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\nimport VarinatsSection from './product-page/VarinatsSection';\r\nimport BuySection from './product-page/BuySection';\r\nimport ProductIntro from './product-page/ProductIntro';\r\nimport { useProductContext } from './product-page/store/product-context';\r\nimport RalatedProductsSection from './product-page/RalatedProductsSection';\r\nimport LazyLoadCustiom from '../components/LazyLoadCustiom';\r\nimport { translaste } from '../utils/utils';\r\nimport useFBViewPageEvent from '../hooks/useFBViewPageEvent';\r\nimport { useParams } from 'react-router-dom';\r\nimport useIncrementProductViewCount from './product-page/hooks/useIncrementProductViewCount'\r\nimport { useStoreContext } from '../store/store-context';\r\n\r\nconst VariantsSectionContainer = ()=>{\r\n  const {productData, setProductData} = useProductContext()\r\n  return <VarinatsSection {...{productData, setProductData}} />\r\n}\r\n\r\nconst ProductPage=()=>{\r\n  const {productData} = useProductContext()\r\n  useFBViewPageEvent()\r\n  const {id: productId} = useParams()\r\n  useIncrementProductViewCount(productId)\r\n\r\n  const {device} = useStoreContext()\r\n  const isMobile = device === 'mobile'\r\n\r\n  return(\r\n    <div className='d-flex px-md-4 gap-md-3' style={{minHeight: '100Vh'}}>\r\n      <div className='col-12 col-md-6 px-md-4'>\r\n        <>\r\n          { productData.galleryImages.length > 0 &&  <div style={{ top: 56, borderRadius: 'var(--border-radius-2)', overflow: 'hidden'}} className='p-sticky-md d-flex flex-column' id='image-slider__container'>\r\n              <ImageSlider/>\r\n              { isMobile && <hr className='border-color-primary-fiding' />}\r\n            </div> \r\n          }\r\n        </>\r\n        <>\r\n          {\r\n            productData.galleryImages.length === 0 && <div className='d-flex align-items-center justify-content-center' \r\n              style={{\r\n                aspectRatio: 1, \r\n                maxWidth: '100%', \r\n                maxHeight: 'calc(100vh - 80px)',\r\n                margin: 'auto',\r\n              }}\r\n            >\r\n                <h3 style={{color: 'grey'}}>\r\n                  {translaste('No image was provider')}\r\n                </h3>\r\n                \r\n            </div>\r\n          }\r\n        </>  \r\n      </div>\r\n      <div className='col-12 col-md-6 px-2 px-lg-4 d-flex flex-column gap-1 p-1 mt-1 px-md-4'>\r\n        <ProductIntro/>\r\n        {  productData.pricesAndImagesList.length > 0 && <VariantsSectionContainer/> }\r\n        <div className='mt-3'>\r\n        <BuySection productData={productData}/>\r\n        </div>\r\n        {productData.richText  && <LazyLoadCustiom className='p-1 my-4 sun-editor-editable' dangerouslySetInnerHTML={{ __html: productData.richText }} />}\r\n      </div>\r\n      <LazyLoadCustiom className='flex-1'>\r\n        <hr className='my-3 border'></hr>\r\n        <RalatedProductsSection />\r\n      </LazyLoadCustiom>\r\n    </div>       \r\n  )\r\n}\r\n\r\n\r\nexport default ProductPage","import React from 'react'\r\nimport {useStoreContext} from '../store/store-context'\r\nimport { translaste } from '../utils/utils'\r\nimport { Link } from 'react-router-dom'\r\nimport LazyImage from '../components/LazyImage'\r\n\r\nconst ProductCard = ({product}) => {\r\n    const {storeData} = useStoreContext()\r\n  return (\r\n    <Link \r\n        style={{\r\n            border: '1px solid var(--border-color)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            borderRadius: 'var(--border-radius-2)',\r\n            width: 152\r\n        }}\r\n        // className='scale-on-hover'\r\n        to={`/redirect?redirect=/products/${product.slug}/${product.product_id}`}\r\n    >\r\n        <LazyImage\r\n            src={product.image || storeData.logo}\r\n            style={{\r\n                width: 150,\r\n                height: 151,\r\n                borderBottom: '1px solid var(--border-color)',\r\n                objectFit: 'cover'\r\n            }}\r\n        />\r\n        <div className='px-2'>\r\n            <h4 className='cut-text'>{ product.title }</h4>\r\n            <div className='d-flex gap-2'>\r\n                <h5 className='color-primary'>{ product.price || 0 } { translaste('DA') }</h5>\r\n                {product.originalPrice && <h5 className='old-price'>{ product.originalPrice  } { translaste('DA') }</h5>}\r\n            </div>\r\n        </div>\r\n            \r\n       \r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ProductCard","import React, { useEffect, useState } from 'react'\r\nimport { useProductContext } from './store/product-context'\r\nimport ProductCard from '../../components/ProductCard'\r\nimport { apiUrl } from '../../constants/Urls'\r\nimport Loader from '../../components/Loader'\r\n\r\nconst RalatedProductsSection = () => {\r\n    const [relatedProducts, setRelatedProducts] = useState(null) \r\n    const {productData} = useProductContext()\r\n    const [loading, setloading] = useState(true)\r\n    useEffect(()=>{\r\n      const getRelatedProducts=async()=>{\r\n        try{\r\n          const response = await fetch(\r\n            apiUrl + '/product/get-related-products?product_id=' + productData.productId,\r\n            {}\r\n          )\r\n          if (!response.ok) {\r\n            console.log(`Error: ${response.status} ${response.statusText}`);\r\n            setloading(false)\r\n            return;\r\n          }\r\n          setRelatedProducts(await response.json())\r\n          setloading(false)\r\n        }catch(error){\r\n          console.log(error)\r\n          setloading(false)\r\n        }\r\n          \r\n      }\r\n      getRelatedProducts()\r\n    }, [])\r\n  return (\r\n    <div className='d-flex flex-wrap gap-2 p-2 justify-content-center col-12'>\r\n        { !loading && relatedProducts && relatedProducts.map(product=><ProductCard key={product.index} product={product} />)}\r\n        { loading && <Loader diam={160} color='var(--primaryColor)' /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RalatedProductsSection"],"names":["useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","ImageSlider","memo","_ref","fullscreen","currentImage","setCurrentImage","productData","useProductContext","screenWidth","useStoreContext","galleryImages","images","map","image","index","url","id","useGoBackOnePAth","useEffect","document","getElementById","classList","remove","documentElement","style","overflow","add","removeProperty","language","rtl","dotContainerRef","useRef","dotContainer","current","targetElement","concat","dotContainerWidth","offsetWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","swiperRef","_jsxs","className","children","position","_jsx","top","width","height","display","justifyContent","maxWidth","aspectRatio","alignItems","Swiper","onClick","onSlideChange","swiper","find","activeIndex","ref","initialSlide","grabCursor","maxHeight","modules","Zoom","zoom","SwiperSlide","backgroundImage","backgroundSize","undefined","backgroundRepeat","backgroundPosition","flexShrink","prevSlide","imageIndex","findIndex","obj","newIndex","slideTo","nextSlide","length","toggleFullScreen","borderRadius","LazyLoadCustiom","handleDotClick","lineHeight","title","discount","backgroundColor","color","padding","margin","fontSize","whiteSpace","miniDescription","marginTop","price","translaste","originalPrice","VariantsSectionContainer","setProductData","VarinatsSection","ProductPage","useFBViewPageEvent","productId","useParams","useIncrementProductViewCount","device","isMobile","minHeight","_Fragment","ProductIntro","pricesAndImagesList","BuySection","richText","dangerouslySetInnerHTML","__html","RalatedProductsSection","product","storeData","Link","border","flexDirection","to","slug","product_id","LazyImage","src","logo","borderBottom","objectFit","relatedProducts","setRelatedProducts","useState","loading","setloading","async","response","fetch","apiUrl","ok","console","log","status","statusText","json","error","getRelatedProducts","ProductCard","Loader","diam"],"sourceRoot":""}