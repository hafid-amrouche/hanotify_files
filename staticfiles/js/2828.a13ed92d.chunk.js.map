{"version":3,"file":"static/js/2828.a13ed92d.chunk.js","mappings":"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","sources":["hooks/useGoBackOnePath.jsx","components/AspectRatioComponent.jsx","components/ImageSlider.jsx","pages/product-page/ProductIntro.jsx","pages/ProductPage.jsx","components/ProductCard.jsx","pages/product-page/RalatedProductsSection.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useState, useEffect, useRef } from 'react';\r\nimport './AspectRatioComponent.css';  // Optional: for additional styling\r\n\r\n// AspectRatioComponent takes 'aspectRatio' prop and adjusts size accordingly\r\nconst AspectRatioComponent = ({ aspectRatio, children, disable }) => {\r\n  // State for component width and height\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  // A ref to get access to the container DOM element\r\n  const containerRef = useRef(null);\r\n\r\n  // Function to calculate dimensions based on aspect ratio and container size\r\n  const calculateDimensions = () => {\r\n    // Get container's current width and height\r\n    const container = containerRef.current;\r\n    const containerWidth = container.offsetWidth;\r\n    const containerHeight = container.offsetHeight;\r\n\r\n    // Calculate the best fit dimensions based on the aspect ratio\r\n    const containerAspectRatio = containerWidth / containerHeight;\r\n\r\n    if (containerAspectRatio > aspectRatio) {\r\n      // Container is wider than the desired aspect ratio, fit height\r\n      setDimensions({\r\n        width: containerHeight * aspectRatio,  // Adjust width based on height\r\n        height: containerHeight,  // Use full container height\r\n      });\r\n    } else {\r\n      // Container is taller than the desired aspect ratio, fit width\r\n      setDimensions({\r\n        width: containerWidth,  // Use full container width\r\n        height: containerWidth / aspectRatio,  // Adjust height based on width\r\n      });\r\n    }\r\n  };\r\n\r\n  // Effect hook to recalculate dimensions when the window resizes\r\n  useEffect(() => {\r\n    calculateDimensions()\r\n    setTimeout(calculateDimensions, [200])\r\n    window.addEventListener('resize', calculateDimensions);\r\n\r\n    // Clean up the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', calculateDimensions); \r\n    };\r\n  }, []);\r\n  return (\r\n    <div ref={containerRef} className=\"aspect-ratio-component-container d-flex\">  \r\n      { !disable && <div\r\n        className=\"aspect-ratio-component-box\"\r\n        style={{\r\n          width: `${dimensions.width}px`,\r\n          height: `${dimensions.height}px`,\r\n        }}\r\n      >\r\n        {/* Render children content */} \r\n        {children}\r\n      </div>\r\n      }\r\n      {\r\n        disable && children\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AspectRatioComponent;\r\n","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Zoom, Navigation } from 'swiper/modules';\r\nimport 'swiper/css/zoom';\r\n\r\n\r\nimport \"swiper/css\";\r\nimport AspectRatioComponent from './AspectRatioComponent';\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {screenWidth} = useStoreContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n    swiperRef.current.swiper.slideTo(id)\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    setCurrentImage(images.find(image=>image.id === swiper.activeIndex)) // swiper.activeIndex gives the current slide index\r\n  };\r\n  const swiperRef = useRef()\r\n  const aspectRatio = 1\r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`justify-content-center image-slider ${fullscreen ? 'fullscreen' : ''}` }\r\n    >\r\n        <div\r\n          className={`slides`}\r\n          style={{\r\n            position: 'relative',\r\n            flex: 1\r\n          }}\r\n        >\r\n            <div style={{position: 'absolute', top:0, left: 0, width: '100%', height: '100%', display: 'flex', alignItems: 'center'}}>\r\n              <AspectRatioComponent aspectRatio={1} disable={fullscreen} >\r\n                <Swiper\r\n                  className=\"mySwiper\"\r\n                  onClick={()=>!fullscreen && navigate('gallery')}\r\n                  onSlideChange={handleSlideChange}\r\n                  ref={swiperRef}\r\n                  initialSlide={currentImage.id}\r\n                  modules={[Zoom, Navigation]}\r\n                  style={{ \r\n                    height: '100%',\r\n                    width: '100%',\r\n                    maxWidth: '100%',\r\n                    maxHeight: '100%',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left:0,\r\n                    '--swiper-navigation-color': '#fff',\r\n                    '--swiper-pagination-color': '#fff',\r\n                  }}\r\n                  zoom={true}\r\n                  grabCursor\r\n                >\r\n                  {images.map((image, index)=>(\r\n                    <SwiperSlide \r\n                      key={index}\r\n                      className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0`}\r\n                      >\r\n                      <div className=\"swiper-zoom-container\">\r\n                        <img\r\n                          className={` ${screenWidth >= 768 && 'border' }`}\r\n                          style={{ \r\n                            display: 'block',\r\n                            height: '100%',\r\n                            width: '100%',\r\n                            objectFit: fullscreen ? 'contain' : 'cover',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            backgroundPosition: 'center',\r\n                            flexShrink: 0,\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0\r\n                          }}\r\n                          src={image.url}\r\n                        />\r\n                      </div>\r\n                    </SwiperSlide>\r\n                  ))}\r\n                \r\n                </Swiper>\r\n                <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n                <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n                <div \r\n                  className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n                  ref={dotContainerRef}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    bottom: -52,\r\n                  }}\r\n                >\r\n                  {images.map((image) => (\r\n                    <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n                      <LazyLoadCustiom>\r\n                        <span\r\n                          className='dot'\r\n                          onClick={() => handleDotClick(image.id)}\r\n                          style={{\r\n                            backgroundImage: `url(${image.url})`\r\n                            \r\n                          }}\r\n                        />\r\n                      </LazyLoadCustiom>\r\n                    </div>\r\n                  ))}\r\n                </div>    \r\n              </AspectRatioComponent>\r\n            </div>\r\n            <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </div>\r\n        <div style={{width: '100%', height: 52}}/>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { memo } from 'react'\r\nimport { useProductContext } from './store/product-context'\r\nimport { translaste } from '../../utils/utils'\r\n\r\nconst ProductIntro = memo(() => {\r\n  const {productData} =useProductContext()\r\n  return (\r\n    <div>\r\n        <h2 style={{lineHeight:1.4}}>\r\n          {productData.title}\r\n\r\n          { productData.discount &&\r\n            <span style={{\r\n              backgroundColor: 'var(--primaryColor)',\r\n              color: 'var(--backgroundColor)',\r\n              padding: '0 6px',\r\n              margin:'0 8px',\r\n              fontSize:14,\r\n              whiteSpace:'nowrap',\r\n              borderRadius: 'var(--border-radius-2)'\r\n            }}>{ productData.discount }</span>\r\n          }\r\n        </h2>   \r\n        { productData.miniDescription &&  <p style={{lineHeight:1.4, marginTop:8}}>\r\n          {productData.miniDescription}\r\n        </p>}     \r\n        <div className='d-flex align-items-center gap-3'>\r\n          { !productData.price ? '' : <h2 className='number' style={{color: 'var(--primaryColor)'}}>{productData.price} {translaste('DA')}</h2>}\r\n          { !productData.originalPrice  ? '' : <h3 className='old-price'>{productData.originalPrice} { translaste('DA') }</h3>}\r\n          { !productData.price && !productData.originalPrice  && <h3 style={{color: 'red'}}>{ translaste('No price available !') }</h3> }\r\n        </div>       \r\n    </div>\r\n  )\r\n}\r\n)\r\nexport default ProductIntro","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\nimport VarinatsSection from './product-page/VarinatsSection';\r\nimport BuySection from './product-page/BuySection';\r\nimport ProductIntro from './product-page/ProductIntro';\r\nimport { useProductContext } from './product-page/store/product-context';\r\nimport RalatedProductsSection from './product-page/RalatedProductsSection';\r\nimport LazyLoadCustiom from '../components/LazyLoadCustiom';\r\nimport { translaste } from '../utils/utils';\r\nimport useFBViewPageEvent from '../hooks/useFBViewPageEvent';\r\nimport { useParams } from 'react-router-dom';\r\nimport useIncrementProductViewCount from './product-page/hooks/useIncrementProductViewCount'\r\nimport { useStoreContext } from '../store/store-context';\r\n\r\nconst VariantsSectionContainer = ()=>{\r\n  const {productData, setProductData} = useProductContext()\r\n  return <VarinatsSection {...{productData, setProductData}} />\r\n}\r\n\r\nconst ProductPage=()=>{\r\n  const {productData} = useProductContext()\r\n  useFBViewPageEvent()\r\n  const {id: productId} = useParams()\r\n  useIncrementProductViewCount(productId)\r\n\r\n  const {device} = useStoreContext()\r\n  const isMobile = device === 'mobile'\r\n\r\n  return(\r\n    <div className='d-flex px-md-4 gap-md-3' style={{minHeight: '100Vh', maxWidth: 1340, margin: 'auto'}}>\r\n      <div className='col-12 col-md-6 px-md-4'>\r\n        <>\r\n          { productData.galleryImages.length > 0 &&  <div style={{ top: 56, overflow: 'hidden'}} className='p-sticky-md d-flex flex-column' id='image-slider__container'>\r\n              <ImageSlider/>\r\n              { isMobile && <hr className='border-color-primary-fiding' />}\r\n            </div> \r\n          }\r\n        </>\r\n        <>\r\n          {\r\n            productData.galleryImages.length === 0 && <div className='d-flex align-items-center justify-content-center' \r\n              style={{\r\n                aspectRatio: 1, \r\n                maxWidth: '100%', \r\n                margin: 'auto',\r\n              }}\r\n            >\r\n                <h3 style={{color: 'grey'}}>\r\n                  {translaste('No image was provider')}\r\n                </h3>\r\n                \r\n            </div>\r\n          }\r\n        </>  \r\n      </div>\r\n      <div className='col-12 col-md-6 px-2 px-lg-4 d-flex flex-column gap-1 p-1 mt-1 px-md-4'>\r\n        <ProductIntro/>\r\n        {  productData.pricesAndImagesList.length > 0 && <VariantsSectionContainer/> }\r\n        <div className='mt-3'>\r\n        <BuySection productData={productData}/>\r\n        </div>\r\n        {productData.richText  && <LazyLoadCustiom className='p-1 my-4 sun-editor-editable' dangerouslySetInnerHTML={{ __html: productData.richText }} />}\r\n      </div>\r\n      <LazyLoadCustiom className='flex-1'>\r\n        <hr className='my-3 border'></hr>\r\n        <RalatedProductsSection />\r\n      </LazyLoadCustiom>\r\n    </div>       \r\n  )\r\n}\r\n\r\n\r\nexport default ProductPage","import React from 'react'\r\nimport {useStoreContext} from '../store/store-context'\r\nimport { translaste } from '../utils/utils'\r\nimport { Link } from 'react-router-dom'\r\nimport LazyImage from '../components/LazyImage'\r\n\r\nconst ProductCard = ({product}) => {\r\n    const {storeData} = useStoreContext()\r\n  return (\r\n    <Link \r\n        style={{\r\n            border: '1px solid var(--border-color)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            borderRadius: 'var(--border-radius-2)',\r\n            width: 152\r\n        }}\r\n        // className='scale-on-hover'\r\n        to={`/products/${product.slug}/${product.product_id}`}\r\n    >\r\n        <LazyImage\r\n            src={product.image || storeData.logo}\r\n            style={{\r\n                width: 150,\r\n                height: 151,\r\n                borderBottom: '1px solid var(--border-color)',\r\n                objectFit: 'cover'\r\n            }}\r\n        />\r\n        <div className='px-2'>\r\n            <h4 className='cut-text'>{ product.title }</h4>\r\n            <div className='d-flex gap-2'>\r\n                <h5 className='color-primary'>{ product.price || 0 } { translaste('DA') }</h5>\r\n                {product.originalPrice && <h5 className='old-price'>{ product.originalPrice  } { translaste('DA') }</h5>}\r\n            </div>\r\n        </div>\r\n            \r\n       \r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ProductCard","import React, { useEffect, useState } from 'react'\r\nimport { useProductContext } from './store/product-context'\r\nimport ProductCard from '../../components/ProductCard'\r\nimport { apiUrl } from '../../constants/Urls'\r\nimport Loader from '../../components/Loader'\r\n\r\nconst RalatedProductsSection = () => {\r\n    const [relatedProducts, setRelatedProducts] = useState(null) \r\n    const {productData} = useProductContext()\r\n    const [loading, setloading] = useState(true)\r\n    useEffect(()=>{\r\n      const getRelatedProducts=async()=>{\r\n        try{\r\n          const response = await fetch(\r\n            apiUrl + '/product/get-related-products?product_id=' + productData.productId,\r\n            {}\r\n          )\r\n          if (!response.ok) {\r\n            console.log(`Error: ${response.status} ${response.statusText}`);\r\n            setloading(false)\r\n            return;\r\n          }\r\n          setRelatedProducts(await response.json())\r\n          setloading(false)\r\n        }catch(error){\r\n          console.log(error)\r\n          setloading(false)\r\n        }\r\n          \r\n      }\r\n      getRelatedProducts()\r\n    }, [])\r\n  return (\r\n    <div className='d-flex flex-wrap gap-2 p-2 justify-content-center col-12'>\r\n        { !loading && relatedProducts && relatedProducts.map(product=><ProductCard key={product.index} product={product} />)}\r\n        { loading && <Loader diam={160} color='var(--primaryColor)' /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RalatedProductsSection"],"names":["useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","_ref","aspectRatio","children","disable","dimensions","setDimensions","useState","width","height","containerRef","useRef","calculateDimensions","container","current","containerWidth","offsetWidth","containerHeight","offsetHeight","useEffect","setTimeout","addEventListener","removeEventListener","_jsxs","ref","className","_jsx","style","concat","ImageSlider","memo","fullscreen","currentImage","setCurrentImage","productData","useProductContext","screenWidth","useStoreContext","galleryImages","images","map","image","index","url","id","useGoBackOnePAth","document","getElementById","classList","remove","documentElement","overflow","add","removeProperty","language","rtl","dotContainerRef","dotContainer","targetElement","dotContainerWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","swiperRef","position","flex","top","display","alignItems","AspectRatioComponent","Swiper","onClick","onSlideChange","swiper","find","activeIndex","initialSlide","modules","Zoom","Navigation","maxWidth","maxHeight","zoom","grabCursor","SwiperSlide","objectFit","backgroundRepeat","backgroundPosition","flexShrink","src","prevSlide","imageIndex","findIndex","obj","newIndex","slideTo","nextSlide","length","bottom","borderRadius","LazyLoadCustiom","handleDotClick","backgroundImage","toggleFullScreen","lineHeight","title","discount","backgroundColor","color","padding","margin","fontSize","whiteSpace","miniDescription","marginTop","price","translaste","originalPrice","VariantsSectionContainer","setProductData","VarinatsSection","ProductPage","useFBViewPageEvent","productId","useParams","useIncrementProductViewCount","device","isMobile","minHeight","_Fragment","ProductIntro","pricesAndImagesList","BuySection","richText","dangerouslySetInnerHTML","__html","RalatedProductsSection","product","storeData","Link","border","flexDirection","to","slug","product_id","LazyImage","logo","borderBottom","relatedProducts","setRelatedProducts","loading","setloading","async","response","fetch","apiUrl","ok","console","log","status","statusText","json","error","getRelatedProducts","ProductCard","Loader","diam"],"sourceRoot":""}