{"version":3,"file":"static/js/7930.8874e7b0.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","hooks/useGoBackOnePath.jsx","components/ImageSlider.jsx","pages/ProductGallery.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div disabled={disabled} className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useEffect, memo, useRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport LazyLoadCustiom from './LazyLoadCustiom';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Zoom  } from 'swiper/modules';\r\nimport 'swiper/css/zoom';\r\n\r\n\r\nimport \"swiper/css\";\r\n\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {device} = useStoreContext()\r\n  const isMobile = device === 'mobile'\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n    swiperRef.current.swiper.slideTo(id)\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n  const dotContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    setCurrentImage(images.find(image=>image.id === swiper.activeIndex)) // swiper.activeIndex gives the current slide index\r\n  };\r\n  const swiperRef = useRef()\r\n  return (\r\n    <div \r\n      id=\"image-slider\" className={`image-slider ${fullscreen ? 'fullscreen' : ''} ${!isMobile && 'border' }` }\r\n    >\r\n        <div\r\n          className={`slides `}\r\n        >\r\n              <Swiper\r\n                className=\"mySwiper\"\r\n                onClick={()=>!fullscreen && navigate('gallery')}\r\n                onSlideChange={handleSlideChange}\r\n                ref={swiperRef}\r\n                initialSlide={currentImage.id}\r\n                grabCursor={true}\r\n                style={{ \r\n                  height: '100%',\r\n                  width: '100%',\r\n                  '--swiper-navigation-color': '#fff',\r\n                  '--swiper-pagination-color': '#fff',\r\n                }}\r\n                modules={[Zoom]}\r\n                zoom={true}\r\n              >\r\n                {images.map((image, index)=>(\r\n                  <SwiperSlide\r\n                    key={index}\r\n                    className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0 swiper-zoom-container`}\r\n                    style={{ \r\n                      backgroundImage: `url(${image.url})` ,\r\n                      height: '100%',\r\n                      width: '100%',\r\n                      backgroundSize: fullscreen ? undefined : 'contain',\r\n                      backgroundRepeat: 'no-repeat',\r\n                      backgroundPosition: 'center',\r\n                      flexShrink: 0\r\n                    }}\r\n                  />\r\n                ))}\r\n              </Swiper>\r\n            <button className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n            <button className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n          <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>\r\n        </div>\r\n        <div \r\n          className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n          ref={dotContainerRef}\r\n        >\r\n          {images.map((image) => (\r\n            <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n              <LazyLoadCustiom>\r\n                <span\r\n                  className='dot'\r\n                  onClick={() => handleDotClick(image.id)}\r\n                  style={{\r\n                    backgroundImage: `url(${image.url})`\r\n                  }}\r\n                />\r\n              </LazyLoadCustiom>\r\n            </div>\r\n              \r\n          ))}\r\n        </div>    \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default ImageSlider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\n\r\nconst ProductPageInner=()=>{\r\n  return(\r\n    <div style={{ top: 64, borderRadius: 'var(--border-radius-3)', overflow: 'hidden'}} className='p-sticky-md border' id='image-slider__container'>\r\n      <ImageSlider fullscreen/>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst ProductPage = () => {\r\n  return (\r\n      <ProductPageInner/>\r\n  )\r\n}\r\n\r\nexport default ProductPage","import React, { useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { apiUrl, filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProvider=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.length > 0 ? shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          }): states.map(state=>({\r\n            cost: 0,\r\n            costToHome: 0,\r\n            label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            id :state.id\r\n          }))\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../../../css/suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n    return (\r\n        <ProductContext.Provider value={defaultValue}>\r\n            { productData.productId && <Outlet/>}\r\n            { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n              <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n              <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n                <i className='fa-solid fa-chevron-left'></i>\r\n                {translaste('Go back to store')}\r\n              </BuyButton>\r\n            </div> }\r\n        </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","ImageSlider","memo","fullscreen","currentImage","setCurrentImage","productData","useProductContext","device","useStoreContext","isMobile","galleryImages","images","map","image","index","url","id","useGoBackOnePAth","useEffect","document","getElementById","classList","remove","documentElement","style","overflow","add","removeProperty","language","rtl","dotContainerRef","useRef","dotContainer","current","targetElement","dotContainerWidth","offsetWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","left","behavior","swiperRef","_jsxs","Swiper","onSlideChange","swiper","find","activeIndex","ref","initialSlide","grabCursor","height","width","modules","Zoom","zoom","SwiperSlide","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","flexShrink","prevSlide","imageIndex","findIndex","obj","newIndex","slideTo","nextSlide","length","toggleFullScreen","borderRadius","LazyLoadCustiom","handleDotClick","ProductPageInner","top","ProductPage","defaultProductData","productId","title","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","variants","pricesAndImagesList","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","ProductContextProvider","useState","error","setError","useParams","lang_prefix","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","console","log","status","statusText","json","cost","state","states","costToHome","label","code","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","defaultValue","func","newState","Provider","value","Outlet","minHeight","translaste","BuyButton","useContext"],"sourceRoot":""}