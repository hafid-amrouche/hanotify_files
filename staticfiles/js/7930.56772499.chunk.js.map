{"version":3,"file":"static/js/7930.56772499.chunk.js","mappings":"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","sources":["webpack://hanotify-store/./src/components/BuyButton.module.css?8862","components/BuyButton.jsx","hooks/useGoBackOnePath.jsx","components/ImageSlider.jsx","components/LazyImage.jsx","pages/ProductGallery.jsx","pages/product-page/store/product-context.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BuyButton_button__Litak\",\"outline\":\"BuyButton_outline__bdUdp\",\"disabled\":\"BuyButton_disabled__okQ++\"};","import React from 'react'\r\nimport classes from './BuyButton.module.css'\r\nconst BuyButton = ({children, className, onClick, disabled, outline, ...props}) => {\r\n  return (\r\n    <div disabled={disabled} className={`${outline ? classes['outline'] : ''} ${classes.button} ${className} ${ disabled ? classes.disabled : ''}`} {...props} onClick={disabled ? undefined : onClick} >{children}</div>\r\n  )\r\n}\r\n\r\nexport default BuyButton","import { useNavigate } from 'react-router-dom';\r\n\r\nconst useGoBackOnePath = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goBackOnePath = () => {\r\n    const currentPath = window.location.pathname;  // Get the current path\r\n    const newPath = currentPath.split('/').slice(0, -1).join('/');  // Remove the last segment\r\n    navigate(newPath);  // Navigate to the new path\r\n  };\r\n\r\n  return goBackOnePath;\r\n};\r\n\r\nexport default useGoBackOnePath;","import React, { useEffect, memo, useRef, useState, forwardRef } from 'react';\r\nimport './ImageSlider.css'; // Style file for ImageSlider (you can customize this)\r\nimport { useProductContext } from '../pages/product-page/store/product-context';\r\nimport { useStoreContext } from '../store/store-context';\r\nimport useGoBackOnePAth from '../hooks/useGoBackOnePath'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Zoom, Pagination } from 'swiper/modules';\r\nimport 'swiper/css/zoom';\r\nimport \"swiper/css\";\r\nimport 'swiper/css/pagination';\r\nimport LazyImage from './LazyImage';\r\n\r\n\r\nconst ImageSliderInner= forwardRef(({fullscreen}, swiperRef)=>{\r\n\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {screenWidth} = useStoreContext()\r\n  \r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n  const nextSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex <= images.length -2 ? imageIndex + 1 : imageIndex   \r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const imageIndex = images.findIndex(obj => obj.id === currentImage.id)\r\n    const newIndex = imageIndex >= 1 ? imageIndex - 1 : 0\r\n    setCurrentImage(images[newIndex]);\r\n    swiperRef.current.swiper.slideTo(newIndex)\r\n  }\r\n\r\n  const goBackOnePath = useGoBackOnePAth()\r\n  const navigate = useNavigate()\r\n  \r\n  const toggleFullScreen = ()=>{\r\n    if (fullscreen) goBackOnePath()\r\n    else navigate('gallery')\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if (fullscreen) {\r\n      document.getElementById('image-slider__container').classList.remove('p-sticky-md')\r\n      document.documentElement.style.overflow ='hidden'\r\n    }\r\n    else {\r\n      document.getElementById('image-slider__container').classList.add('p-sticky-md')\r\n      document.documentElement.style.removeProperty('overflow')\r\n    }\r\n  }, [fullscreen])\r\n\r\n  const { language }= useStoreContext()\r\n  const rtl = language === 'ar' \r\n\r\n \r\n\r\n  const handleSlideChange = (swiper) => {\r\n    setCurrentImage(images.find(image=>image.id === swiper.activeIndex)) // swiper.activeIndex gives the current slide index\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{height: '100%', width: '100%', position: 'absolute', top: 0, left: 0}}>\r\n        <Swiper\r\n          className=\"mySwiper\"\r\n          onClick={()=>!fullscreen && toggleFullScreen()}\r\n          onSlideChange={handleSlideChange}\r\n          ref={swiperRef}\r\n          initialSlide={currentImage.id}\r\n          modules={[Zoom, Pagination]}\r\n          pagination={{\r\n            clickable: true,\r\n          }}\r\n          style={{ \r\n            height: '100%',\r\n            width: '100%',\r\n            maxWidth: '100%',\r\n            maxHeight: '100%',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left:0,\r\n            '--swiper-navigation-color': 'var(--primaryColor)',\r\n            '--swiper-pagination-color': 'var(--primaryColor)',\r\n          }}\r\n          grabCursor\r\n        >\r\n          {images.map((image, index)=>(\r\n            <SwiperSlide \r\n              key={index}\r\n              className={`${fullscreen ? 'full-screen-image' : ''} flex-shrink-0`}\r\n              >\r\n              <div className=\"swiper-zoom-container\">\r\n                <LazyImage\r\n                  className={` ${screenWidth >= 768 && !fullscreen && 'border' }`}\r\n                  loading=\"lazy\"\r\n                  style={{ \r\n                    display: 'block',\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    objectFit: fullscreen ? 'contain' : 'cover',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundPosition: 'center',\r\n                    flexShrink: 0,\r\n                    position: 'absolute', \r\n                    top: 0,\r\n                    left: 0\r\n                  }}\r\n                  src={image.url}\r\n                />\r\n              </div>\r\n            </SwiperSlide>\r\n          ))}\r\n        \r\n        </Swiper> \r\n      </div>\r\n      <button  style={{top: 'calc( 50% - 15px )'}} className={rtl ? ' next' : 'prev' } onClick={prevSlide}>&#10094;</button>\r\n      <button  style={{top: 'calc( 50% - 15px )'}} className={rtl ? ' prev' : 'next'}  onClick={nextSlide}>&#10095;</button>\r\n      <i className={ (fullscreen ? 'fa-solid fa-compress' : 'fa-solid fa-expand') + ' fullscreen-btn' } onClick={toggleFullScreen}></i>          \r\n    </>\r\n\r\n  );\r\n})\r\n\r\n\r\n\r\n\r\nconst ImageSlider = memo(({fullscreen=false}) => {\r\n  const {currentImage, setCurrentImage, productData} = useProductContext()\r\n  const {screenWidth} = useStoreContext()\r\n  const containerRef = useRef()\r\n  const [dimentions, setDimensions] = useState({\r\n    width: 0,\r\n    height: 0\r\n  }) \r\n  const aspectRatio = fullscreen ? window.innerWidth / window.innerHeight : 1\r\n  const calculateDimensions=()=>{\r\n    const container = containerRef.current;\r\n    const containerWidth = container.offsetWidth;\r\n    const containerHeight = container.offsetHeight - (window.innerWidth >= 768 && !fullscreen ? 4 : 0);\r\n    const containerAspectRatio = containerWidth / containerHeight;\r\n\r\n    if (containerAspectRatio > aspectRatio) {\r\n      // Container is wider than the desired aspect ratio, fit height\r\n      setDimensions({\r\n        width: containerHeight * aspectRatio,  // Adjust width based on height\r\n        height: containerHeight,  // Use full container height\r\n      });\r\n    } else {\r\n      // Container is taller than the desired aspect ratio, fit width\r\n      setDimensions({\r\n        width: containerWidth,  // Use full container width\r\n        height: containerWidth / aspectRatio,  // Adjust height based on width\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    calculateDimensions()\r\n  }, [screenWidth]);\r\n\r\n\r\n  // dot\r\n  const {galleryImages} = productData\r\n  const images = galleryImages.map((image, index)=>({\r\n    url: image,\r\n    id: index\r\n  }))\r\n\r\n  const handleDotClick = (id) => {\r\n    setCurrentImage(images.find(image=>image.id === id));\r\n    swiperRef.current.swiper.slideTo(id)\r\n  };\r\n\r\n  const dotContainerRef = useRef(null);\r\n  useEffect(() => {\r\n    const dotContainer = dotContainerRef.current;\r\n    const targetElement = document.getElementById(`small-image-${currentImage.id}`);\r\n\r\n    if (targetElement && dotContainer) {\r\n      const dotContainerWidth = dotContainer.offsetWidth;\r\n      const dotElementWidth = targetElement.offsetWidth;\r\n      const dotElementLeft = targetElement.offsetLeft;\r\n\r\n      // Calculate the scroll position to center the element\r\n      const dotScrollPosition = dotElementLeft - (dotContainerWidth / 2) + (dotElementWidth / 2);\r\n\r\n      dotContainer.scroll({\r\n        left: dotScrollPosition,\r\n        behavior: 'smooth', // Smooth scroll to the new position\r\n      });\r\n    }\r\n\r\n  }, [currentImage]); // Trigger the effect when imageIndex changes\r\n\r\n  const swiperRef = useRef()\r\n\r\n  const containerHeight = fullscreen ? window.innerHeight : (screenWidth < 768 ? Math.min(document.documentElement.clientWidth, window.innerHeight) : window.innerHeight)\r\n  return (\r\n <div style={{height: '100%', width: '100%',  position: fullscreen ? 'absolute' : undefined, top: 0, left: 0, zIndex: fullscreen && 2 }}>\r\n   <div ref={containerRef} style={{position: 'relative', background: fullscreen ? '#000000' : undefined, display: 'flex', alignItems: \"center\", justifyContent: 'center', height: containerHeight, width: '100%'}}>\r\n      <div style={{...dimentions, aspectRatio, position:'absolute', top: window.innerWidth >= 768 && !fullscreen ? 4 : 0}}>\r\n        <ImageSliderInner fullscreen={fullscreen} ref={swiperRef} />\r\n      </div>\r\n      {/* <div \r\n        className=\"dots d-flex flex-nowrap overflow-x-auto\"\r\n        ref={dotContainerRef}\r\n        style={{\r\n          top: dimentions.height + (window.innerWidth >= 768 ? 4 : 0)\r\n        }}\r\n      >\r\n        {images.map((image) => (\r\n          <div key={image.id} className={`${image.id === currentImage.id ? 'active' : ''}`} style={{borderRadius: 'var(--border-radius-1)'}} id={`small-image-${image.id}`}>\r\n            <LazyLoadCustiom>\r\n              <span\r\n                className='dot'\r\n                onClick={() => handleDotClick(image.id)}\r\n                style={{\r\n                  backgroundImage: `url(${image.url})`\r\n                  \r\n                }}\r\n              />\r\n            </LazyLoadCustiom>\r\n          </div>\r\n        ))}\r\n        \r\n      </div>   */}\r\n  </div> \r\n </div>\r\n)})\r\n  \r\n\r\nexport default ImageSlider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst LazyImage = ({ src, alt, placeholder, className, ...props }) => {\r\n  const [isInView, setIsInView] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const imageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            setIsInView(true);\r\n            observer.disconnect();\r\n          }\r\n        });\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 0.1\r\n      }\r\n    );\r\n\r\n    if (imageRef.current) {\r\n      observer.observe(imageRef.current);\r\n    }\r\n\r\n    if(isInView){\r\n      observer.unobserve(imageRef.current);\r\n    }\r\n    return () => {\r\n      if (observer && imageRef.current) {\r\n        observer.unobserve(imageRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n      <img\r\n        src={isInView ? src : placeholder}\r\n        alt={alt}\r\n        onLoad={() => setLoaded(true)}\r\n        className={`${className} ${loaded ? 'loaded' : 'loading'}`}\r\n        {...props}\r\n        ref={imageRef}\r\n      />\r\n  );\r\n};\r\n\r\nexport default LazyImage;\r\n","import React from 'react'\r\nimport ImageSlider from '../components/ImageSlider'\r\n\r\nconst ProductPageInner=()=>{\r\n  return(\r\n    <div style={{ top: 64, borderRadius: 'var(--border-radius-3)', overflow: 'hidden'}} className='p-sticky-md border' id='image-slider__container'>\r\n      <ImageSlider fullscreen/>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst ProductPage = () => {\r\n  return (\r\n      <ProductPageInner/>\r\n  )\r\n}\r\n\r\nexport default ProductPage","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { createContext } from \"react\";\r\nimport { filesUrl } from '../../../constants/Urls';\r\nimport {Outlet, useNavigate, useParams} from 'react-router-dom'\r\nimport states from '../../../json/states.json'\r\nimport { translaste } from '../../../utils/utils';\r\nimport BuyButton from '../../../components/BuyButton';\r\nimport { useStoreContext } from '../../../store/store-context';\r\n\r\nconst defaultProductData = {\r\n    productId: null,\r\n    title: '',\r\n    slug: '',\r\n    miniDescription: '',\r\n    galleryImages: [],\r\n    selectedCategories: [],\r\n    price: 0,\r\n    originalPrice: 0,\r\n    discount: '',\r\n    shippingCostByState: [] ,\r\n    variants: {},\r\n    pricesAndImagesList: [],\r\n    combinationIndex: 0,\r\n    richText: '',\r\n    relatedProducts: [],\r\n    allProductsRelated: false,\r\n  }\r\nconst ProductContext = createContext({\r\n    productData: defaultProductData,\r\n    setProductData: ()=>{},\r\n    currentImage: null,\r\n    setCurrentImage: ()=>{},\r\n})\r\n\r\n\r\nconst ProductContextProviderInner=()=>{\r\n    const [productData, setProductData] = useState(defaultProductData)\r\n    const [error, setError] = useState(false)\r\n    const [currentImage, setCurrentImage] = useState(null)\r\n    const {id: productId} = useParams()\r\n\r\n    const {language} = useStoreContext()\r\n    const lang_prefix = language === 'ar' ? '_ar': '' \r\n\r\n    const {storeData} = useStoreContext()\r\n    useEffect(()=>{\r\n      const fetchProduct=async()=>{\r\n        setError(false)\r\n        try{\r\n          let data;\r\n          if (window.productData){\r\n            data = window.productData\r\n          }\r\n          else{\r\n            const response = await fetch(\r\n              filesUrl + `/get-product?product_id=${productId}`,\r\n              {\r\n                method: 'get'\r\n              }\r\n            )\r\n            if (!response.ok) {\r\n              console.log(`Error: ${response.status} ${response.statusText}`);\r\n              setError(true)\r\n              return;\r\n            }\r\n          \r\n            data = await response.json()\r\n          }\r\n\r\n\r\n          let shippingCostByState = data.useDefaultShipping ? storeData.defaultShippigCosts : data.shippingCostByState\r\n          shippingCostByState = shippingCostByState.map(cost=>{\r\n            const state = states.find(state=>state.id === cost.id)\r\n            return({\r\n                ...cost,\r\n                cost: cost.cost,\r\n                costToHome: cost.costToHome,\r\n                label: `${state.code} - ${state['name' + lang_prefix]}`,\r\n            })\r\n          })\r\n          \r\n          setProductData(productData=>({\r\n              ...productData,\r\n              ...data,\r\n              shippingCostByState: shippingCostByState,\r\n          }))\r\n          if(data.galleryImages?.length>0) setCurrentImage({\r\n            id:0,\r\n            url:data.galleryImages[0]\r\n          })\r\n\r\n          // SEO\r\n          document.title = data.title || 'Hanotify'\r\n          document.querySelector('#meta-title').setAttribute('content', data.title || 'Hanotify')\r\n\r\n          document.querySelector('#meta-image').setAttribute('content', document.querySelector('#meta-image').getAttribute('content') || (data.galleryImages ? data.galleryImages[0] : ''))\r\n\r\n          document.querySelector('#description').setAttribute('content',  data.miniDescription || document.querySelector('#description').getAttribute('content'))\r\n          document.querySelector('#meta-descrition').setAttribute('content', data.miniDescription  || document.querySelector('#meta-descrition').getAttribute('content'))\r\n        }\r\n        catch(error){\r\n          console.log(error)\r\n        }              \r\n      }\r\n      fetchProduct()\r\n      return ()=>{window.productData = undefined}\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n      // Dynamically import CSS based on the theme\r\n      const loadRichTextCss = async () => {\r\n        if (productData?.richText) {\r\n          await import('../../../css/suneditor-contents.css');\r\n        }\r\n      };\r\n  \r\n      loadRichTextCss();\r\n    }, [productData]);\r\n\r\n    const setCurrentImageWithImagesCount=(func)=>{\r\n      let newState;\r\n      if (typeof func === '' ) {\r\n        newState = func(productData.galleryImages.length)\r\n      }\r\n      else {\r\n        newState = func\r\n      }\r\n      setCurrentImage(func)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const defaultValue = {\r\n      productData,\r\n      setProductData,\r\n      currentImage,\r\n      setCurrentImage: setCurrentImageWithImagesCount,\r\n    }\r\n    return (\r\n      <ProductContext.Provider value={defaultValue}>\r\n          { productData.productId && <Outlet/>}\r\n          { error && <div className='flex-1 d-flex flex-column gap-2 align-items-center justify-content-center' style={{minHeight: 500, width: '100%'}} >\r\n            <h2 className='color-red'>{ translaste('Wrong link') }</h2>\r\n            <BuyButton outline className='d-flex gap-3' onClick={()=>navigate('/')}>\r\n              <i className='fa-solid fa-chevron-left'></i>\r\n              {translaste('Go back to store')}\r\n            </BuyButton>\r\n          </div> }\r\n      </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nconst ProductContextProvider=()=>{\r\n  const {id: productId} = useParams()\r\n  return <ProductContextProviderInner key={productId} />\r\n}\r\n\r\nexport default ProductContextProvider\r\nexport const useProductContext =()=> useContext(ProductContext)"],"names":["_ref","children","className","onClick","disabled","outline","props","_jsx","concat","classes","undefined","useGoBackOnePath","navigate","useNavigate","goBackOnePath","newPath","window","location","pathname","split","slice","join","ImageSliderInner","forwardRef","swiperRef","fullscreen","currentImage","setCurrentImage","productData","useProductContext","screenWidth","useStoreContext","galleryImages","images","map","image","index","url","id","useGoBackOnePAth","toggleFullScreen","useEffect","document","getElementById","classList","remove","documentElement","style","overflow","add","removeProperty","language","rtl","_jsxs","_Fragment","height","width","position","top","left","Swiper","onSlideChange","swiper","find","activeIndex","ref","initialSlide","modules","Zoom","Pagination","pagination","clickable","maxWidth","maxHeight","grabCursor","SwiperSlide","LazyImage","loading","display","objectFit","backgroundRepeat","backgroundPosition","flexShrink","src","prevSlide","imageIndex","findIndex","obj","newIndex","current","slideTo","nextSlide","length","memo","_ref2","containerRef","useRef","dimentions","setDimensions","useState","aspectRatio","innerWidth","innerHeight","calculateDimensions","container","containerWidth","offsetWidth","containerHeight","offsetHeight","dotContainerRef","dotContainer","targetElement","dotContainerWidth","dotElementWidth","dotScrollPosition","offsetLeft","scroll","behavior","Math","min","clientWidth","zIndex","background","alignItems","justifyContent","alt","placeholder","isInView","setIsInView","loaded","setLoaded","imageRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","disconnect","root","rootMargin","threshold","observe","unobserve","onLoad","ProductPageInner","borderRadius","ImageSlider","ProductPage","defaultProductData","productId","title","slug","miniDescription","selectedCategories","price","originalPrice","discount","shippingCostByState","variants","pricesAndImagesList","combinationIndex","richText","relatedProducts","allProductsRelated","ProductContext","createContext","setProductData","ProductContextProviderInner","error","setError","useParams","lang_prefix","storeData","async","_data$galleryImages","data","response","fetch","filesUrl","method","ok","console","log","status","statusText","json","useDefaultShipping","defaultShippigCosts","cost","state","states","costToHome","label","code","querySelector","setAttribute","getAttribute","fetchProduct","loadRichTextCss","defaultValue","func","newState","Provider","value","Outlet","minHeight","translaste","BuyButton","ProductContextProvider","useContext"],"sourceRoot":""}